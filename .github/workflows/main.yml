name: CI

on:
  push:
    branches:
      - Sodev34-patch-1

env:
  DOCKER_REPO: sodev34/lettings
  HEROKU_APP_NAME: app-oc-lettings

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    container:
      image: cimg/python:3.9
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Utilisez une version plus récente qui prend en charge Node.js 16

      - name: Utiliser Node.js version 16
        uses: actions/setup-node@v3  # Utilisez une version plus récente qui prend en charge Node.js 16
        with:
          node-version: '16.x'

      - name: Configure virtual environment
        run: |
          python3 -m venv env
          . env/bin/activate
          pip install -r requirements.txt

      - name: Linting
        run: |
          . env/bin/activate
          flake8

      - name: Run tests
        run: |
          . env/bin/activate
          pytest

  containerize:
    needs: build_and_test
    runs-on: ubuntu-latest
    container:
      image: cimg/python:3.9
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Utilisez une version plus récente qui prend en charge Node.js 16

   #   - name: Utiliser Node.js version 16
    #    uses: actions/setup-node@v3  # Utilisez une version plus récente qui prend en charge Node.js 16
     #   with:
      #    node-version: '16.x'

      - name: Setup Docker
        #uses: docker/setup-buildx-action@v1
        #uses: docker/login-action@v1
        #with:
        #  username: ${{ secrets.DOCKER_LOGIN }}
        #  password: ${{ secrets.DOCKER_PASSWORD }}
       # with:
        #  driver: docker-container
         # buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
          #install: false
          #use: true
        run: |
          sudo chmod 666 /var/run/docker.sock  # Accordez les autorisations en lecture/écriture au socket Docker
          sudo chown $USER /var/run/docker.sock  # Changez le propriétaire du socket Docker pour l'utilisateur en cours
         # group: |
          #  sudo groupadd docker  # Ajoutez le groupe "docker" s'il n'existe pas déjà
           # sudo usermod -aG docker $USER  # Ajoutez l'utilisateur en cours au groupe "docker" pour qu'il ait les autorisations requises

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_LOGIN }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t final_image_oc_lettings_site .
          docker tag final_image_oc_lettings_site ${{ secrets.DOCKER_LOGIN }}/$DOCKER_REPO:${{ github.sha }}
      
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_LOGIN }}/$DOCKER_REPO:${{ github.sha }}

  deploy:
    needs: containerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Utilisez une version plus récente qui prend en charge Node.js 16

   #   - name: Utiliser Node.js version 16
    #    uses: actions/setup-node@v3  # Utilisez une version plus récente qui prend en charge Node.js 16
     #   with:
      #    node-version: '16.x'

      - name: Install Heroku CLI
        run: |
          sudo curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login to Heroku
        run: |
          HEROKU_API_KEY=${{ secrets.HEROKU_TOKEN }} heroku container:login

      - name: Deploy to Heroku
        run: |
          HEROKU_API_KEY=${{ secrets.HEROKU_TOKEN }} heroku container:push -a ${{ env.HEROKU_APP_NAME }} web
          HEROKU_API_KEY=${{ secrets.HEROKU_TOKEN }} heroku container:release -a ${{ env.HEROKU_APP_NAME }} web
